        -:    0:Source:/home/kail/Рабочий стол/Engine/game/Events.cpp
        -:    0:Graph:/home/kail/Рабочий стол/Engine/cmake-build-debug-coverage/CMakeFiles/OpenGL.dir/game/Events.cpp.gcno
        -:    0:Data:/home/kail/Рабочий стол/Engine/cmake-build-debug-coverage/CMakeFiles/OpenGL.dir/game/Events.cpp.gcda
        -:    0:Runs:1
        -:    1://
        -:    2:// Created by kail on 05.01.2021.
        -:    3://
        -:    4:
        -:    5:#include <cstring>
        -:    6:#include "Events.h"
        -:    7:#include "glad/glad.h"
        -:    8:#include "GLFW/glfw3.h"
        -:    9:#include "../support/ResourcesManager.h"
        -:   10://--------------------------------------------------------------------------------------------------------------------------------------------------------
        -:   11://---CALLBACK
        -:   12:#define MouseCaseSwap 1024
    #####:   13:void key_callback(GLFWwindow* window ,int key ,int scancode ,int action ,int mode){
    #####:   14:    if (action == GLFW_PRESS) {
    %%%%%:   14-block  0
    #####:   15:        Events::_keys[key] = true;
    #####:   16:        Events::_frames[key] = Events::_current;
    %%%%%:   16-block  0
    #####:   17:    } else if(action == GLFW_RELEASE) {
    %%%%%:   17-block  0
    #####:   18:        Events::_keys[key] = false;
    #####:   19:        Events::_frames[key] = Events::_current;
    %%%%%:   19-block  0
        -:   20:    }
    #####:   21:}
    #####:   22:void  mouse_button_callback(GLFWwindow* window , int button , int action , int mode){
    #####:   23:    if (action == GLFW_PRESS){
    %%%%%:   23-block  0
    #####:   24:        Events::_keys[MouseCaseSwap + button] = true;
    #####:   25:        Events::_frames[MouseCaseSwap + button] = Events::_current;
    %%%%%:   25-block  0
    #####:   26:    } else if (action == GLFW_RELEASE){
    %%%%%:   26-block  0
    #####:   27:        Events::_keys[MouseCaseSwap + button] = false;
    #####:   28:        Events::_frames[MouseCaseSwap + button] = Events::_current;
    %%%%%:   28-block  0
        -:   29:    }
    #####:   30:}
       75:   31:void cursor_position_callback(GLFWwindow* window , double xpos , double ypos){
       75:   32:    if (Events::_cursor_lock){
       75:   32-block  0
    #####:   33:        Events::deltaX += xpos - Events::X;
    #####:   34:        Events::deltaY += ypos - Events::Y;
    %%%%%:   34-block  0
        -:   35:    }
        -:   36:    else {
       75:   37:        Events::_cursor_start = true;
       75:   37-block  0
        -:   38:    }
       75:   39:    Events::X = xpos;
       75:   40:    Events::Y = ypos;
       75:   41:}
        -:   42:
        -:   43:
        -:   44:
        -:   45://--------------------------------------------------------------------------------------------------------------------------------------------------------
        -:   46: bool* Events::_keys;
        -:   47: uint* Events::_frames;
        -:   48: uint  Events::_current = 0;
        -:   49: float Events::deltaX   = 0.f;
        -:   50: float Events::deltaY   = 0.f;
        -:   51: float Events::X        = 0.f;
        -:   52: float Events::Y        = 0.f;
        -:   53: bool Events::_cursor_lock = false;
        -:   54: bool Events::_cursor_start = false;
        -:   55:
        1:   56:void Events::Init() {
        1:   57:    _keys   = new bool[1032];
        1:   57-block  0
        1:   58:    _frames = new uint[1032];
        -:   59:
        1:   60:    memset(_keys , false , sizeof(bool) * 1032);
        1:   61:    memset(_frames , 0     , sizeof(uint) * 1032);
        -:   62:
        1:   63:    glfwSetKeyCallback(ResourcesManager::getWindow() , key_callback);
        1:   64:    glfwSetMouseButtonCallback(ResourcesManager::getWindow() , mouse_button_callback);
        1:   65:    glfwSetCursorPosCallback(ResourcesManager::getWindow() , cursor_position_callback);
        1:   66:}
        -:   67:
      534:   68:void Events::PoolEvents() {
      534:   69:    _current ++;
      534:   70:    deltaX = 0.0f;
      534:   71:    deltaY = 0.0f;
      534:   72:    glfwPollEvents();
      534:   72-block  0
      534:   73:}
        -:   74:
    #####:   75:bool Events::isPressed(const int &keyCode) {
    #####:   76:    if(keyCode < 0 || keyCode > MouseCaseSwap)
    %%%%%:   76-block  0
    %%%%%:   76-block  1
    #####:   77:        return false;
    %%%%%:   77-block  0
        -:   78:
        -:   79:
    #####:   80:    return false;
    %%%%%:   80-block  0
        -:   81:}
        -:   82:
      534:   83:bool Events::jPressed(const int &keyCode) {
      534:   84:    if(keyCode < 0 || keyCode > MouseCaseSwap)
      534:   84-block  0
      534:   84-block  1
    #####:   85:        return false;
    %%%%%:   85-block  0
     534*:   86:    return _keys[keyCode] && _frames[keyCode] == _current;
      534:   86-block  0
    %%%%%:   86-block  1
    %%%%%:   86-block  2
      534:   86-block  3
      534:   86-block  4
        -:   87:}
        -:   88:
